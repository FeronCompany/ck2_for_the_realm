coup = {
	skill = intrigue
	desc = coup_desc_general
	category = hostile
	icon = icon_scheme_hostile
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	success_chance_growth_per_skill_point = t3_scgpsp_value
	base_progress_goal = t3_base_phase_length_value
	minimum_success = 0
	maximum_secrecy = 95
	base_maximum_success = 95
	success_desc = "COUP_SUCCESS_DESC"
	discovery_desc = "COUP_DISCOVERY_DESC"		
	cooldown = { years = 5 }
	is_secret = yes
	base_secrecy = 15
	maximum_breaches = 5
	phases_per_agent_charge = 1
	speed_per_skill_point = t3_spsp_owner_value
	speed_per_target_skill_point = t3_spsp_target_value
	target_type = character
	
	allow = {
		age >= 16
		is_imprisoned = no
	}
	
	valid = {
		scope:target = {
			NOT = { imprisoner = scope:owner }
		}
		scope:owner = {
			NOT = { imprisoner = scope:target }
		}
		scope:owner = {
			OR = {
				is_courtier_of = scope:target
				is_vassal_of = scope:target
			}
		}
	}

	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers guests scripted_relations }
	agent_groups_target_character_perspective = { courtiers vassals }
	
	agent_join_chance = {
		base = 0
		
		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = 30
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}

		#Coup Scheme modifiers
		hostile_coup_agent_base_join_chance_modifier = yes

		#Family Feud
		house_feud_hostile_scheme_agent_modifier = yes
	}
	
	odds_prediction = {
		min = 20
	}
	base_success_chance = {
		base = 10
		
		coup_base_chance_modifier = yes

		modifier = {
			add = 10
			desc = FTR_COUP_COURTIER
			scope:owner = {
				is_courtier_of = scope:target
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_GUARD_INFILTRATED
			scope:owner = {
				exists = var:ftr_coup_guard_infiltrated
			}
		}

		modifier = {
			add = -15
			desc = FTR_COUP_GUARD_INFILTRATION_FAIL
			scope:owner = {
				exists = var:ftr_coup_guard_infiltration_failed
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_STEAL_MAP_SUCC
			scope:owner = {
				exists = var:ftr_coup_steal_map_succ
			}
		}

		modifier = {
			add = -15
			desc = FTR_COUP_STEAL_MAP_FAIL
			scope:owner = {
				exists = var:ftr_coup_steal_map_fail
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_COUNTERFEIT_PASS_SUCC
			scope:owner = {
				exists = var:ftr_coup_counterfeit_pass_succ
			}
		}

		modifier = {
			add = -15
			desc = FTR_COUP_COUNTERFEIT_PASS_FAIL
			scope:owner = {
				exists = var:ftr_coup_counterfeit_pass_fail
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_CREATE_CHAOS_SUCC
			scope:owner = {
				exists = var:ftr_coup_create_chaos_succ
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_MAKE_TRAP_SUCC
			scope:owner = {
				exists = var:ftr_coup_make_trap_succ
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_THIEF_SUCC
			scope:owner = {
				exists = var:ftr_coup_thief_succ
			}
		}

		modifier = {
			add = 10
			desc = FTR_COUP_SERVANT_BRIBE
			scope:owner = {
				exists = var:ftr_coup_servant_bribe
			}
		}

		modifier = {
			add = -30
			desc = FTR_COUP_UNPREPARED_ACTION
			scope:owner = {
				exists = var:ftr_coup_unprepared_action
			}
		}

		modifier = {
			add = -100
			scope:target = {				
				has_opinion_modifier = {
					target = scope:owner
					modifier = ftr_attempted_coup_crime
				}
			}
			desc = FTR_COUP_DISCOVERED
		}

		# At War
		modifier = {
			add = -50
			desc = "SCHEME_AT_WAR"
			scope:target = {
				is_at_war_with = scope:owner
			}
		}
	}

	agent_leave_threshold = -25

	on_start = {
		set_variable = {
			name = apply_countermeasures
			value = flag:calculating
		}
		add_scheme_starting_opportunities_intrigue_effect = yes
		# Fallback agents — a balanced config if you start the scheme from script.
		if = {
			limit = {
				scheme_owner = {
					NOT = { has_variable = agents_added }
				}
			}
			add_agent_slot = agent_thug
			add_agent_slot = agent_ambusher
			add_agent_slot = agent_muscle
			add_agent_slot = agent_footpad
			add_agent_slot = agent_lookout
		}
	}

	on_phase_completed = {
		random = {
			chance = scope:scheme.scheme_success_chance
			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
			if = {
				limit = {
					exists = scope:scheme_successful
					scope:target = {
						NOT = { exists = var:ftr_coup_sensed }
					}
				}
				trigger_event = {
					on_action = ftr_coup_success
				}
			}
			else = {
				trigger_event = {
					on_action = ftr_coup_failure
				}	
			}
		}
	}

	on_monthly = {
		save_scope_as = scheme
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					on_action = ftr_coup_ongoing
				}
			}
		}
	}

	
	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			remove_variable = ftr_coup_method
			save_scope_as = owner
		}
		if = { #Did the character die in another way?
			limit = {
				scope:target = {
					is_alive = no
					NOT = { killer = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = ftr_coup_invalid_target_die
					desc = ftr_coup_invalid_target_die.desc
					left_icon = scope:owner
					right_icon = scope:target
				}
			}
		}
		if = {
			limit = {
				scope:owner = {
					NOT = { is_vassal_of = scope:target }
					NOT = { is_courtier_of = scope:target }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = ftr_coup_invalid_relation_change
					desc = ftr_coup_invalid_relation_change.desc
					left_icon = scope:owner
					right_icon = scope:target
				}
			}
		}
	}
}
