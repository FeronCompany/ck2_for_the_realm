
######### Convert Bureacrat to Feudal ##########
ftr_convert_bureacrat_to_feudal_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	desc = ftr_convert_bureacrat_to_feudal_interaction_desc
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_vassal_of = scope:actor
			has_government = centralism_government
		}
		scope:actor = {
			has_government = centralism_government
			is_independent_ruler = yes
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  {
				is_at_war_with = scope:recipient
			}
		}
	}
	on_accept = {
		scope:actor = {
			add_prestige = -150
			save_scope_as = liege
		}
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = ftr_grant_here_privilage_opinion
			}
			trigger_event = {
				id = ftr_realm_event.1003
			}
		}
	}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = -40
		modifier = {
			add = 20
			scope:actor = {
				opinion = {
					target = scope:recipient
					value >= 50
				}
			}
		}
		modifier = {
			add = 20
			scope:actor = {
				has_trait = generous
			}
		}
		modifier = {
			add = 20
			scope:actor = {
				is_parent_of = scope:recipient
			}
		}
	}
}

######### Depose Bureacrat ##########
ftr_depose_bureacrat_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	desc = ftr_depose_bureacrat_interaction_desc
	populate_actor_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_adult = yes
					is_physically_able = yes
					can_be_granted_titles_by = { RULER = scope:actor }
					NOT = { has_council_position = councillor_court_chaplain }
				}
				add_to_list = characters
			}
		}
	}
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_vassal_of = scope:actor
			has_government = centralism_government
			primary_title.tier >= tier_county
		}
		scope:actor = {
			has_government = centralism_government
			is_independent_ruler = yes
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			is_at_war = no
		}
		scope:actor = {
			NOT =  {
				has_truce = scope:recipient
			}
		}
	}
	can_send = {
		scope:actor = {
			prestige >= 500
		}
	}
	on_accept = {
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:actor = {
			add_prestige = -500
			save_scope_as = liege
			scope:secondary_actor = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_promote_me_opinion
				}
				save_scope_as = successor
			}
			scope:recipient = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_depose_bureacrat_opinion
				}
				every_held_title = {
					limit = {
						#has_title_law = bureacratic_succession_law
						tier >= tier_county
					}
					change_title_holder_include_vassals = {
						holder = scope:secondary_actor
						change = scope:change
						government_base = scope:actor
					}
				}
				scope:recipient = {
					trigger_event = {
						id = ftr_realm_event.1004
						days = 1
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		scope:secondary_actor = {
			add_realm_law = centralism_vassal_succession_law
			every_held_title = {
				limit = {
					tier > tier_county
				}
				add_title_law = bureacratic_succession_law
			}
		}
	}
	on_auto_accept = {}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 10
			scope:actor = {
				opinion = {
					target = scope:recipient
					value <= 0
				}
			}
		}
		modifier = {
			add = -100
			OR = {
				scope:actor = {
					opinion = {
						target = scope:recipient
						value > 10
					}
				}
				scope:recipient = {
					opinion = {
						target = scope:actor
						value >= 30
					}
				}
			}
		}
		modifier = {
			add = 10
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < 30
				}
			}
		}
		modifier = {
			add = 40
			scope:actor = {
				has_imprisonment_reason = scope:recipient
			}
		}
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:secondary_actor
			multiplier = 0.1
		}
		opinion_modifier = {
			opinion_target = scope:secondary_actor
			who = scope:actor
			multiplier = 0.1
		}
	}
}

######### Request Depose Bureacrat ##########
ftr_request_depose_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	cooldown = { years = 2 }
	ai_frequency = 24
	ai_targets = {
		ai_recipients = vassals
	}
	desc = ftr_request_depose_interaction_desc
	greeting = positive
	notification_text = ftr_request_depose_interaction_text
	populate_actor_list = {
		scope:actor = {
			every_courtier = {
				limit = {
					is_adult = yes
					is_physically_able = yes
					can_be_granted_titles_by = { RULER = scope:actor }
					NOT = { has_council_position = councillor_court_chaplain }
				}
				add_to_list = characters
			}
		}
	}

	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
		scope:actor.top_liege = {
			save_scope_as = recipient
		}
	}
	is_shown = {
		scope:actor = {
			has_government = centralism_government
			is_independent_ruler = no
			primary_title.tier > tier_county
		}
		scope:secondary_recipient = {
			is_vassal_of = scope:actor
			has_government = centralism_government
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			is_at_war = no
		}
		scope:recipient = {
			is_at_war = no
		}
	}
	can_send = {
		scope:actor = {
			prestige >= 250
		}
	}
	on_accept = {
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:actor = {
			add_prestige = -250
			scope:secondary_actor = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_promote_me_opinion
				}
			}
			scope:secondary_recipient = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_depose_bureacrat_opinion
				}
				every_held_title = {
					limit = {
						tier >= tier_county
					}
					change_title_holder_include_vassals = {
						holder = scope:secondary_actor
						change = scope:change
						government_base = scope:actor
					}
				}
				scope:secondary_recipient = {
					trigger_event = {
						id = ftr_realm_event.1004
						days = 1
					}
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		scope:secondary_actor = {
			add_realm_law = centralism_vassal_succession_law
			every_held_title = {
				limit = {
					tier > tier_county
				}
				add_title_law = bureacratic_succession_law
			}
		}
	}
	on_auto_accept = {}
	on_decline = {
		scope:actor = {
			add_opinion = {
				target = scope:recipient
				modifier = ftr_refuse_depose_bureacrat_opinion
			}
		}
	}
	ai_accept = {
		base = -40
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.4
		}
		opinion_modifier = {
			opinion_target = scope:secondary_actor
			who = scope:recipient
			multiplier = 0.2
		}
		opinion_modifier = {
			opinion_target = scope:secondary_recipient
			who = scope:recipient
			multiplier = -0.2
		}
		modifier = {
			add = {
				add = 10
				multiply = scope:secondary_recipient.num_sinful_traits
			}
			scope:secondary_recipient.num_sinful_traits > 0
			desc = DEPOSE_TARGET_SIN
		}
		modifier = {
			add = 50
			scope:actor = {
				has_imprisonment_reason = scope:secondary_recipient
			}
			desc = DEPOSE_TARGET_IMPRISON
		}
	}
	#auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 10
			scope:actor = {
				opinion = {
					target = scope:secondary_recipient
					value <= 0
				}
			}
		}
		modifier = {
			add = -100
			OR = {
				scope:actor = {
					opinion = {
						target = scope:secondary_recipient
						value > 10
					}
				}
				scope:secondary_recipient = {
					opinion = {
						target = scope:actor
						value >= 30
					}
				}
			}
		}
		modifier = {
			add = 10
			scope:secondary_recipient = {
				opinion = {
					target = scope:actor
					value <= 20
				}
			}
		}
		modifier = {
			add = 50
			scope:actor = {
				has_imprisonment_reason = scope:secondary_recipient
			}
		}
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:secondary_actor
			multiplier = 0.1
		}
		opinion_modifier = {
			opinion_target = scope:secondary_actor
			who = scope:actor
			multiplier = 0.1
		}
	}
}

######### Vassal War Mediation ##########
ftr_vassal_mediation_interaction = {
	category = interaction_category_vassal
	interface = interfere_in_war
	special_interaction = interfere_in_war_interaction
	ai_accept_negotiation = yes
	popup_on_receive = yes
	pause_on_receive = yes
	desc = ftr_vassal_mediation_interaction_desc

	is_shown = {
		scope:recipient = {
			is_vassal_of = scope:actor
			is_at_war = yes
			any_character_war = {
				OR = {
					primary_attacker = scope:recipient
					primary_defender = scope:recipient
				}
				save_temporary_scope_as = target_war
			}
		}
		scope:actor = {
			has_government = centralism_government
			NOT = { is_participant_in_war = scope:target_war }
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			NOT = {
				any_war_enemy = {
					this = scope:actor
				}
			}
		}
	}
	can_be_picked = {
		OR = {
			scope:target.primary_attacker = scope:recipient
			scope:target.primary_defender = scope:recipient
		}
	}
	on_accept = {
		scope:actor = {
			add_prestige = -150
		}
		scope:recipient = {
			trigger_event = ftr_interaction_event.1001
		}
	}
	on_auto_accept = {}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = 100
	}
}

###### COUP INTERACTION ######
ftr_coup_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	desc = ftr_coup_interaction_desc
	cooldown_against_recipient = { years = 10 }
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			OR = {
				is_vassal_of = scope:recipient
				is_courtier_of = scope:recipient
			}
			OR = {
				is_child_of = scope:recipient
				is_grandchild_of = scope:recipient
				is_great_grandchild_of = scope:recipient
				is_sibling_of = scope:recipient
				scope:recipient.primary_title = {
					scope:actor = {
						has_claim_on = prev
					}
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			is_imprisoned = no
			OR = {
				is_independent_ruler = yes
				AND = {
					is_independent_ruler = no
					NOT = { has_government = centralism_government }
				}
			}
		}
		scope:actor = {
			is_imprisoned = no
		}
	}
	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = ftr_coup_interaction_notification
				left_icon = scope:actor					
				right_icon = scope:recipient
				start_scheme = {
					type = coup
					target = scope:recipient
				}
				stress_impact = {
					compassionate = medium_stress_impact_gain
					just = minor_stress_impact_gain
					humble = minor_stress_impact_gain
					honest = minor_stress_impact_gain
					craven = medium_stress_impact_gain
					ambitious = medium_stress_impact_loss
					callous = minor_stress_impact_loss
				}
			}
			set_variable = {
				name = ftr_coup_method
				# 0-force attack; 1-infiltrate; 2-use trap
				value = 0
				days = 365
			}
		}
		hidden_effect = {
			scope:recipient = {
				random = {
					chance = 10
					modifier = {
						add = scope:recipient.intrigue
					}
					trigger_event = {
						id = ftr_coup_ongoing.2005
						days = 5
					}
				}
			}
		}
	}
	on_auto_accept = {}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = -30
		modifier = {
			add = 20
			scope:actor = {
				opinion = {
					target = scope:recipient
					value <= 50
				}
			}
		}
		modifier = {
			add = 20
			scope:actor = {
				OR = {
					has_trait = ambitious
					has_trait = deceitful
					has_trait = impatient
					has_trait = paranoid
					has_trait = callous
				}
			}
		}
		modifier = {
			add = -10
			scope:actor = {
				OR = {
					has_trait = content
					has_trait = honest
					has_trait = patient
					has_trait = trusting
					has_trait = compassionate
					has_trait = craven
				}
			}
		}
		modifier = {
			add = 10
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < 30
				}
			}
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_imprisonment_reason = scope:actor
			}
		}
	}
}
