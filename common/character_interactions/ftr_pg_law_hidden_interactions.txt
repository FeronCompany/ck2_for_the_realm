

ftr_change_law_army_type_0_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_army_type_0_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_army_type_0 }
			can_pass_ftr_army_type_0 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0001
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0101
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_army_type_0
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_army_type_0
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I cannot affort men-at-arms
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					max_military_strength < 8000
					gold < 200
				}
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
		# When I have gold and large army, prefer not
		modifier = {
			add = -50
			scope:recipient = {
				max_military_strength >= 15000
				gold >= 300
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
	}
	ai_will_do = {
		base = -10
		modifier = {
			add = 40
			scope:recipient = {
				OR = {
					max_military_strength < 8000
					gold < 200
				}
			}
		}
	}
}

ftr_change_law_army_type_1_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_army_type_1_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_army_type_1 }
			is_independent_ruler = yes
			can_pass_ftr_army_type_1 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0002
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0102
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_army_type_1
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_army_type_1
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I cannot affort men-at-arms
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					max_military_strength < 8000
					gold < 200
				}
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
		# When I have gold and large army
		modifier = {
			add = 100
			scope:recipient = {
				max_military_strength >= 15000
				gold >= 400
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
	}
	ai_will_do = {
		base = -10
		modifier = {
			add = 40
			scope:recipient = {
				max_military_strength >= 15000
				gold >= 300
			}
		}
	}
}

ftr_change_law_army_type_2_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_army_type_2_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_army_type_2 }
			is_independent_ruler = yes
			can_pass_ftr_army_type_2 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0003
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0103
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_army_type_2
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_army_type_2
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I cannot affort men-at-arms
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					max_military_strength < 8000
					gold < 200
				}
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
		# When I have gold and large army
		modifier = {
			add = 100
			scope:recipient = {
				max_military_strength >= 15000
				gold >= 400
			}
			desc = FTR_GOLD_AND_MILITARY_REASON
		}
	}
	ai_will_do = {
		base = -10
		modifier = {
			add = 40
			scope:recipient = {
				max_military_strength >= 15000
				gold >= 300
			}
		}
	}
}

ftr_change_law_council_power_0_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_council_power_0_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_council_power_0 }
			can_pass_ftr_council_power_0 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0004
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0104
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_council_power_0
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_council_power_0
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I can handle domains by myself
		modifier = {
			add = 50
			scope:recipient = {
				domain_limit_available >= 1
				vassal_limit_available >= 11
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		# I can't handle domains
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					domain_limit_available < 0
					vassal_limit_available < 0
				}
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				OR = {
					has_trait = arbitrary
					has_trait = ambitious
					has_trait = diligent
				}
			}
			desc = FTR_TRAIT_REASON
		}
		modifier = {
			add = -20
			scope:recipient = {
				OR = {
					has_trait = content
					has_trait = lazy
				}
			}
			desc = FTR_TRAIT_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 40
			scope:actor = scope:recipient
			scope:recipient = {
				domain_limit_available >= 1
				vassal_limit_available >= 11
				has_realm_law = ftr_council_power_1
			}
		}
	}
}

ftr_change_law_council_power_1_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_council_power_1_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_council_power_1 }
			can_pass_ftr_council_power_1 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0005
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0105
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_council_power_1
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_council_power_1
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I can handle domains by myself
		modifier = {
			add = -50
			scope:recipient = {
				domain_limit_available >= 1
				vassal_limit_available >= 11
				has_realm_law = ftr_council_power_0
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		# I can't handle domains
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					domain_limit_available < 0
					vassal_limit_available < 0
				}
				has_realm_law = ftr_council_power_0
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		# I can handle domains by myself
		modifier = {
			add = 50
			scope:recipient = {
				domain_limit_available >= 1
				vassal_limit_available >= 11
				has_realm_law = ftr_council_power_2
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		# I can't handle domains
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					domain_limit_available < 0
					vassal_limit_available < 0
				}
				has_realm_law = ftr_council_power_2
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 40
			scope:actor = scope:recipient
			OR = {
				scope:recipient = {
					AND = {
						domain_limit_available >= 1
						vassal_limit_available >= 11
						has_realm_law = ftr_council_power_2
					}
				}
				scope:recipient = {
					AND = {
						OR = {
							vassal_limit_available < 0
							domain_limit_available < 0
						}
						has_realm_law = ftr_council_power_0
					}
				}
			}
		}
		modifier = {
			add = 30
			NOT = { scope:actor = scope:recipient }
			scope:recipient = {
				has_realm_law = ftr_council_power_0
			}
		}
	}
}

ftr_change_law_council_power_2_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_council_power_2_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_council_power_2 }
			can_pass_ftr_council_power_2 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0006
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0106
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_council_power_2
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_council_power_2
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		# I can handle domains by myself
		modifier = {
			add = -50
			scope:recipient = {
				domain_limit_available >= 1
				vassal_limit_available >= 11
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		# I can't handle domains
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					domain_limit_available < 0
					vassal_limit_available < 0
				}
			}
			desc = FTR_DOMAIN_LIMIT_REASON
		}
		modifier = {
			add = -20
			scope:recipient = {
				OR = {
					has_trait = arbitrary
					has_trait = ambitious
					has_trait = diligent
				}
			}
			desc = FTR_TRAIT_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				OR = {
					has_trait = content
					has_trait = lazy
				}
			}
			desc = FTR_TRAIT_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 30
			scope:actor = scope:recipient
			scope:recipient = {
				OR = {
					domain_limit_available < 0
					vassal_limit_available < 0
				}
				has_realm_law = ftr_council_power_1
			}
		}
		modifier = {
			add = 20
			NOT = { scope:actor = scope:recipient }
			scope:recipient = {
				has_realm_law = ftr_council_power_1
			}
		}
	}
}

ftr_change_law_proposal_right_0_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_proposal_right_0_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_proposal_right_0 }
			can_pass_ftr_proposal_right_0 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0007
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0107
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_proposal_right_0
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_proposal_right_0
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:actor = scope:recipient
		}
	}
}

ftr_change_law_proposal_right_1_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_proposal_right_1_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_proposal_right_1 }
			can_pass_ftr_proposal_right_1 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0008
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0108
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_proposal_right_1
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_proposal_right_1
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 20
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:actor = scope:recipient
			scope:recipient = {
				has_realm_law = ftr_proposal_right_2
			}
		}
		modifier = {
			add = 20
			NOT = { scope:actor = scope:recipient }
			scope:recipient = {
				has_realm_law = ftr_proposal_right_0
			}
		}
	}
}

ftr_change_law_proposal_right_2_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_proposal_right_2_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_proposal_right_2 }
			can_pass_ftr_proposal_right_2 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0009
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0109
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_proposal_right_2
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_proposal_right_2
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 20
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:actor = scope:recipient
			scope:recipient = {
				has_realm_law = ftr_proposal_right_3
			}
		}
		modifier = {
			add = 20
			NOT = { scope:actor = scope:recipient }
			scope:recipient = {
				has_realm_law = ftr_proposal_right_1
			}
		}
	}
}

ftr_change_law_proposal_right_3_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_proposal_right_3_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_proposal_right_3 }
			can_pass_ftr_proposal_right_3 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0010
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0110
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_proposal_right_3
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_proposal_right_3
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			NOT = { scope:actor = scope:recipient }
			scope:recipient = {
				has_realm_law = ftr_proposal_right_2
			}
		}
	}
}

ftr_change_law_economic_policy_0_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_economic_policy_0_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_economic_policy_0 }
			can_pass_ftr_economic_policy_0 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0011
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0111
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_economic_policy_0
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_economic_policy_0
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				gold >= 200
			}
			desc = FTR_MY_GOLD_IS_ENOUGH
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:recipient = {
				gold >= 200
			}
		}
	}
}

ftr_change_law_economic_policy_1_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_economic_policy_1_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_economic_policy_1 }
			can_pass_ftr_economic_policy_1 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		scope:recipient = {
			custom_description = {
				text = "ftr_have_enough_bureaucracy_value_tt"
				value = ftr_economic_policy_1_bureaucracy_gap_value
				ftr_bureaucracy_value >= ftr_economic_policy_1_bureaucracy_gap_value
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0012
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0112
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_economic_policy_1
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_economic_policy_1
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				gold >= 200
			}
			has_realm_law = ftr_economic_policy_2
			desc = FTR_MY_GOLD_IS_ENOUGH
		}
		modifier = {
			add = -30
			scope:recipient = {
				gold >= 200
			}
			has_realm_law = ftr_economic_policy_0
			desc = FTR_MY_GOLD_IS_ENOUGH
		}
		modifier = {
			add = -30
			scope:recipient = {
				gold < 100
			}
			has_realm_law = ftr_economic_policy_2
			desc = GOLD_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				gold < 100
			}
			has_realm_law = ftr_economic_policy_0
			desc = GOLD_REASON
		}
	}
	ai_will_do = {
		base = 10
	}
}

ftr_change_law_economic_policy_2_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }
	hidden = yes
	desc = ftr_change_law_economic_policy_2_interaction_desc
	ai_maybe = yes
	can_send_despite_rejection = yes
	ai_targets = {
		ai_recipients = self
		ai_recipients = liege
	}
	ai_frequency = 36
	is_shown = {
		OR = {
			scope:actor = scope:recipient
			scope:actor.liege = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT =  { is_at_war_with = scope:recipient }
			is_imprisoned = no
			is_capable_adult = yes
			ftr_can_make_proposal_trigger = yes
		}
		scope:recipient = {
			is_imprisoned = no
			NOT = { has_realm_law = ftr_economic_policy_2 }
			can_pass_ftr_economic_policy_2 = yes
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
			custom_description = {
				text = "ftr_not_sent_law_change_proposal_tt"
				subject = scope:actor
				NOT = { has_character_flag = ftr_send_law_change_proposal }
			}
		}
		scope:recipient = {
			custom_description = {
				text = "ftr_have_enough_bureaucracy_value_tt"
				value = ftr_economic_policy_2_bureaucracy_gap_value
				ftr_bureaucracy_value >= ftr_economic_policy_2_bureaucracy_gap_value
			}
		}
		ftr_can_accept_proposal_trigger = yes
	}
	on_send = {
		hidden_effect = {
			scope:actor = {
				add_character_flag = {
					flag = ftr_send_law_change_proposal
					years = 2
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		if = {
			limit = { scope:recipient = { has_realm_law = ftr_council_power_2 } }
			custom_description = {
				text = "ftr_proposal_will_be_reviewed_tt"
				subject = scope:recipient
				scope:recipient = {
					ftr_accept_proposal_effect = yes
					# get list: powerful_subjects_list
					ftr_update_powerful_subjects_list_effect = yes
					every_in_list = {
						list = powerful_subjects_list
						limit = { NOT = { this = scope:actor } }
						trigger_event = {
							id = ftr_pg_law_event.0013
							days = { 5 10 }
						}
					}
					trigger_event = {
						id = ftr_pg_law_event.0113
						days = 30
					}
				}
			}
			show_as_tooltip = {
				scope:recipient = {
					add_realm_law = ftr_economic_policy_2
				}
			}
		}
		else = {
			scope:recipient = {
				add_realm_law = ftr_economic_policy_2
			}
		}
	}
	on_decline = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
		}
		ftr_law_change_decline_effect = yes
	}
	auto_accept = {
		OR = {
			scope:actor = scope:recipient
			scope:recipient = {
				is_imprisoned_by = scope:actor
			}
			scope:actor = {
				is_diarch_of_target = scope:recipient
			}
			scope:recipient = {
				has_realm_law = ftr_council_power_2
			}
		}
	}
	ai_accept = {
		base = 0
		opinion_modifier = {
			trigger = { NOT = { scope:actor = scope:recipient } }
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		modifier = {
			add = 20
			scope:recipient = {
				gold < 100
			}
			desc = GOLD_REASON
		}
	}
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:recipient = {
				gold < 100
			}
		}
	}
}

######### Support Liege During Regency ##########
ftr_diarch_support_liege_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	desc = ftr_diarch_support_liege_interaction_desc
	hidden = yes
	ai_targets = {
		ai_recipients = liege
	}
	ai_frequency = 24
	cooldown_against_recipient = { years = 2 }
	is_shown = {
		scope:actor = {
			is_vassal_of = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			NOT =  {
				is_at_war_with = scope:recipient
			}
			is_capable_adult = yes
			NOT = { is_diarch_of_target = scope:recipient }
			custom_description = {
				text = "ftr_show_stance_in_regency_tt"
				NOT = { has_character_flag = ftr_show_stance_in_regency }
			}
		}
		scope:recipient = {
			has_active_diarchy = yes
			has_diarchy_active_parameter = diarchy_is_regency
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
		}
	}
	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
			add_opinion = {
				target = scope:recipient.diarch
				modifier = ftr_political_opponent_opinion
			}
			add_character_flag = {
				flag = ftr_show_stance_in_regency
				years = 1
			}
		}
		scope:recipient = {
			update_diarchy_swing_with_perspective_effect = {
				SWING = minor_sop_swing_liege_gain
				LIEGE = scope:recipient
			}
			add_opinion = {
				target = scope:actor
				modifier = ftr_political_alliance_opinion
			}
			diarch = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_political_opponent_opinion
				}
				progress_towards_rival_effect = {
					REASON = rival_from_stance
					CHARACTER = scope:actor
					OPINION = 0
				}
			}
			hidden_effect = {
				# Notify all subjects: pg_member_list
				ftr_update_pg_member_list_effect = yes
				every_in_list = {
					list = pg_member_list
					send_interface_message = {
						title = "ftr_vassal_support_liege_against_regent_tt"
						left_icon = scope:actor
						right_icon = scope:recipient
						custom_description = {
							text = "ftr_vassal_support_liege_against_regent_content"
							subject = scope:actor
							object = scope:recipient
						}
					}
				}
			}
		}
	}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = -20
		opinion_modifier = {
			opinion_target = scope:recipient
			who = scope:actor
			multiplier = 0.5
		}
		opinion_modifier = {
			opinion_target = scope:recipient.diarch
			who = scope:actor
			multiplier = -1
		}
		modifier = {
			add = 50
			scope:actor = {
				is_allied_to = scope:recipient
				NOT = { is_allied_to = scope:recipient.diarch }
			}
		}
	}
}

######### Support Diarch During Regency ##########
ftr_diarch_support_diarch_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	desc = ftr_diarch_support_diarch_interaction_desc
	hidden = yes
	ai_targets = {
		ai_recipients = liege
	}
	ai_frequency = 24
	cooldown_against_recipient = { years = 2 }
	is_shown = {
		scope:actor = {
			is_vassal_of = scope:recipient
		}
	}
	is_valid_showing_failures_only = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			NOT =  {
				is_at_war_with = scope:recipient
			}
			is_capable_adult = yes
			NOT = { is_diarch_of_target = scope:recipient }
			custom_description = {
				text = "ftr_show_stance_in_regency_tt"
				NOT = { has_character_flag = ftr_show_stance_in_regency }
			}
		}
		scope:recipient = {
			has_active_diarchy = yes
			has_diarchy_active_parameter = diarchy_is_regency
		}
	}
	can_send = {
		scope:actor = {
			custom_description = {
				text = "ftr_have_enough_pi_tt"
				value = ftr_make_pg_proposal_cost_value
				ftr_political_influence_value >= ftr_make_pg_proposal_cost_value
			}
		}
	}
	on_accept = {
		scope:actor = {
			ftr_add_political_influence_effect = {
				VALUE = ftr_make_pg_proposal_modify_value
			}
			add_opinion = {
				target = scope:recipient
				modifier = ftr_political_opponent_opinion
			}
			add_character_flag = {
				flag = ftr_show_stance_in_regency
				years = 1
			}
		}
		scope:recipient = {
			update_diarchy_swing_with_perspective_effect = {
				SWING = minor_sop_swing_diarch_gain
				LIEGE = scope:recipient
			}
			add_opinion = {
				target = scope:actor
				modifier = ftr_political_opponent_opinion
			}
			progress_towards_rival_effect = {
				REASON = rival_from_stance
				CHARACTER = scope:actor
				OPINION = 0
			}
			diarch = {
				add_opinion = {
					target = scope:actor
					modifier = ftr_political_alliance_opinion
				}
				change_strife_opinion = medium_strife_loss
			}
			hidden_effect = {
				# Notify all subjects: pg_member_list
				ftr_update_pg_member_list_effect = yes
				every_in_list = {
					list = pg_member_list
					send_interface_message = {
						title = "ftr_vassal_support_regent_against_liege_tt"
						left_icon = scope:actor
						right_icon = scope:recipient.diarch
						custom_description = {
							text = "ftr_vassal_support_regent_against_liege_content"
							subject = scope:actor
							object = scope:recipient.diarch
						}
					}
				}
			}
		}
	}
	on_decline = {}
	auto_accept = yes
	ai_will_do = {
		base = -20
		opinion_modifier = {
			opinion_target = scope:recipient
			who = scope:actor
			multiplier = -0.75
		}
		opinion_modifier = {
			opinion_target = scope:recipient.diarch
			who = scope:actor
			multiplier = 0.5
		}
		modifier = {
			add = 50
			scope:actor = {
				is_allied_to = scope:recipient.diarch
				NOT = { is_allied_to = scope:recipient }
			}
		}
	}
}
